{"cells":[{"cell_type":"markdown","source":["Importing necessary libraries "],"metadata":{"id":"tM2K1778j1H8"},"id":"tM2K1778j1H8"},{"cell_type":"code","source":["!pip install yake\n","!pip install stanza\n","\n","import nltk, spacy, csv, re, yake, stanza, json\n","import pandas as pd\n","import numpy as np\n","\n","from google.colab import drive\n","from torch._C import set_num_threads\n","from datetime import datetime\n","from pprint import pprint\n","import tensorflow as tf\n","\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","stanza.download('en')\n","\n","nlp = stanza.Pipeline(lang='en', processors='tokenize,ner')\n","kw_extractor = yake.KeywordExtractor()\n","\n","drive.mount('/content/drive')"],"metadata":{"id":"kGSXd8n4kR0i"},"id":"kGSXd8n4kR0i","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Recommending email responses templates"],"metadata":{"id":"mZQNQXk7kvJc"},"id":"mZQNQXk7kvJc"},{"cell_type":"code","execution_count":null,"id":"05e54b34","metadata":{"id":"05e54b34"},"outputs":[],"source":["with open('') as f:\n","    json_data = json.load(f)\n","\n","model.load('')\n","\n","vocab_array = np.array(list(tokenizer.word_index.keys()))\n","\n","def make_prediction(text, n_words):\n","    for i in range(n_words):\n","        text_tokenize = tokenizer.texts_to_sequences([text])\n","        text_padded = tf.keras.preprocessing.sequence.pad_sequences(text_tokenize, maxlen=14)\n","        prediction = np.squeeze(np.argmax(model.predict(text_padded), axis=-1))\n","        prediction = str(vocab_array[prediction - 1])\n","        text += \" \" + prediction\n","    return text\n","\n","sequence_of_events = ''\n","Number_of_events_predicted = 2\n","make_prediction(sequence_of_events, Number_of_events_predicted)\n","\n","data= []\n","for x in range(2, 4):\n","  first_key = list(json_data.values())[x]\n","\n","  try:\n","    first_ = list(first_key.values())[1]\n","  except IndexError:\n","    first_ = list(first_key.values())[0]\n","\n","  if first_[7]:\n","    for row in first_[7]:\n","      if first_[7][0]:\n","        str_ = first_[4]\n","        doc = nlp(str_)\n","        for sent in doc.sentences:\n","          for ent in sent.ents:\n","            str_ = str_.replace(ent.text, '{'+ent.type+'}')\n","        print(str_)"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"name":"Recommend email responses templates","provenance":[],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":5}